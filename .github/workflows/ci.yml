name: Run Securesystemslib tests

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      # Run tests on each OS/Python combination
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        # TODO: Add windows-latest when gpg issues are solved
        os: [ubuntu-latest, macos-latest]
        toxenv: [py]

        include:
          - python-version: "3.11"
            os: ubuntu-latest
            toxenv: purepy311
          - python-version: "3.11"
            os: ubuntu-latest
            toxenv: py311-no-gpg
          - python-version: "3.8"
            os: ubuntu-latest
            toxenv: lint

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout securesystemslib
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984
        with:
          python-version: ${{ matrix.python-version }}

      - name: Find pip cache dir
        id: pip-cache
        run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: pip cache
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
        with:
          # Use the os dependent pip cache directory found above
          path: ${{ steps.pip-cache.outputs.dir }}
          # A match with 'key' counts as cache hit
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          # A match with 'restore-keys' is used as fallback
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade tox

      - name: Run tox
        run: tox -e ${{ matrix.toxenv }}

